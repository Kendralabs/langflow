trigger:
  branches:
    include:
      - workbench  # Trigger the pipeline on the workbench branch

pool:
  vmImage: 'ubuntu-latest'

variables:
  imageName: 'langflow-app'
  dockerHubRepository: 'kendralabs/workbench-azure'

steps:
  # Step 1: Build Docker Images
  - task: DockerCompose@1
    displayName: 'Build Docker Images'
    inputs:
      containerregistrytype: 'Container Registry'  # Specify the container registry type
      dockerRegistryEndpoint: 'docker'  # Name of your Docker service connection
      dockerComposeFile: '**/dev.docker-compose.yml'  # Path to your Docker Compose file
      action: 'Build services'  # Build the services defined in the Docker Compose file
      projectName: 'langflow'  # Valid project name (lowercase, alphanumeric, hyphen, or underscore)
      includeSourceTags: false  # Disable source tags as we want custom tagging
      includeLatestTag: false  # Disable default "latest" tagging

  # Step 2: Tag Docker Image (langflow)
  - script: |
      # Tag the langflow image with the correct repository
      docker tag dev-langflow:latest $(dockerHubRepository):langflow-latest
    displayName: 'Tag Docker Image'
    env:
      dockerHubRepository: $(dockerHubRepository)

  # Step 3: Push Docker Images
  - script: |
      # Push the langflow image to Docker Hub
      docker push $(dockerHubRepository):langflow-latest
    displayName: 'Push Docker Image to Docker Hub'
    env:
      dockerHubRepository: $(dockerHubRepository)

  # Step 4: Deploy Containers Using Docker Compose
  - task: SSH@0
    displayName: 'Deploy Docker Containers'
    inputs:
      sshEndpoint: 'ssh'  # Your SSH service connection
      runOptions: 'inline'
      inline: |
        # Navigate to the directory containing the Docker Compose file
        cd /home/azureuser/langflow || exit 1
        
        # Pull the latest images
        docker-compose -f /home/azureuser/langflow/docker/dev.docker-compose.yml pull
        
        # Stop and remove old containers
        docker-compose -f /home/azureuser/langflow/docker/dev.docker-compose.yml down
        
        # Start containers with new images
        docker-compose -f /home/azureuser/langflow/docker/dev.docker-compose.yml up -d
        
        echo "Deployment completed successfully."
